                                  Chapter 1
                                - continued -
                             - Part 3 of 3 parts -
                                    of the
                            Turbo Pascal Reference

            Table of Contents for Borland Pascal Developer's Guide


This chapter is part of the Turbo Pascal Reference electronic freeware book (C)
Copyright 1992 by Ed Mitchell.  This freeware book contains supplementary
material to Borland Pascal Developer's Guide, published by Que Corporation,
1992.  However, Que Corporation has no affiliation with nor responsibility for
the content of this free book.  Please see Chapter 1 of the Turbo Pascal
Reference for important information about your right to distribute and use this
material freely.  If you find this material of use, I would appreciate your
purchase of one my books, such as the Borland Pascal Developer's Guide or
Secrets of the Borland C++ Masters, Sams Books, 1992.  Thank you.


                       Borland Pascal Developer's Guide 
                        -------------------------------

                               Table of Contents
                    ---------------------------------------

Chapter 1
Introduction


Who Should Use This Book?
How To Use This Book
About the Sample Programs
About The Programming Style Used in This Book
The Companion Diskette
How to Contact the Author
New Features in Borland Pascal and Turbo Pascal 7.0
     Which Compiler Should You Use?
     Using Protected-Mode 
     Compiling for Protected Mode
Issues of Programming Style
     Capitalization of Keywords
     Indenting
          Where to Indent?
     Use Blank Lines
     Types and Pointers
     Procedures and Functions



Chapter 2
Units

Introduction
Structure of a Unit
Defining the Interface Section
Inline Procedures and Functions
Using Other Units Within the Interface Section
Defining the Implementation Section
The Unit Initialization Section
Using a Unit in another Program
Compiling a Unit
Using TPUMOVER to Update TURBO.TPL
Multiple .TPL Library Files
Project Management:  The Build and Make Options
Circular References:  When Units Use Each Other
Sharing Declarations Between Units
The Standard Turbo Pascal Units
Library Units Available From Other Suppliers
A Sample Unit
Dynamic Link Libraries



Chapter 3
Overlays

Introduction
General Guidelines
Overlay Example
Description of Example Program OverDemo
Checking OvrResult
Combining .OVR and .EXE into a single .EXE file
Assembly language and Overlay Calls
Overlays and Unit Initialization Code
Overlaying Data
Tuning the Virtual Array Code
Turbo Pascal Overlay Unit Reference



Chapter 4
Object-Oriented Programming

Introduction
What You Need To Learn
The Terminology of Object-oriented Programming
A First Look at Object Oriented Programming in Turbo Pascal
Pointers to Objects and Dynamic Object Allocations
Disposing of Object Pointers
Destructor Methods
The Power of Inheritance
Calling the Ancestor's Init Method
Object Types, Objects and Inheritance
Virtual Methods
Objects containing Virtual Methods Must Have a Constructor
Static versus Virtual:  Which Do You Choose?
Object Types and Type Compatability
Objects as Procedural Parameters
Objects as Typed Constants
Polymorphism
Object Libraries
Designing Object-oriented Programs
Object-oriented Programming Reference
Defining an object
Deriving an object
Object Pointers
Constructor and Destructor Methods
Virtual methods
Using the Self variable
Range Checking of Virtual Method Calls
Glossary of Object Terminology



Chapter 5
Turbo Pascal Graphics

Introduction to Turbo Pascal Graphics
     The Graph Unit and Related Files
     Sample Program
     Circles
     Graphic Text
Viewports
The Current Pointer
Selecting Colors
Choosing Colors from the Color Palette
Selecting Interior Colors for Objects
Charting
The Pie Chart
The Bar Chart
The Line Chart
Graphics Drivers and Font Files
Font Files
Linking Device Drivers and Font Files
Converting .BGI and .CHR files into .OBJ files
Two Approaches to Linking .BGI and .CHR Files
Modifying Your Program to Reference the Linked .BGI and .CHR files



Chapter 6
Assembly Language Programming and Turbo Assembler

Overview of 80x86 CPU Architecture
Bit representations
Memory Addressing
Turbo Pascal Memory Structure
80x86 Processor Instruction Set
Direct Memory Address:  The Use of Mem, MemW and MemL
Direct Port Access:  The Use of Port and PortW
The Use of Inline Statements
Encoding Multiple Bytes
The Inline Directive
The Built-in asm Assembler
Using the Built-in Assembler
How Procedures and Functions Are Called
Accessing Global Variables
The Difference Between Constants and Variables
Local Variables in Procedures and Functions
Accessing Value Parameters and Variable Parameters
Function Return Values
Accessing Pointer Variables
Accessing Record Structures
Statement Labels
Jump Instructions
Near and Far RET return instructions
Data Formats and Definitions
Table of Internal Data Representations
DB, DD and DW Directives
Using DB, DW and DD for Multiple Values and Symbols
Assembler Expressions
Turbo Assembler Basics
Turbo Assembler Statements
A Sample Program
Assembling and Compiling
Turbo Assembler Summary



Chapter 7
Debugging Turbo Pascal

Program Testing Strategies
Catching Software Defects Before They Happen
Debugging Strategies
Logic errors
Unitialized variables
Unitialized or Erroneous Pointer Values
Changes to Global Variables
Failure to Free Up Dynamically Allocated Memory
Off by 1 Errors
Clobbering Memory and Out of Range Errors
Ignoring Pascal Scoping Rules
Undefined Functions
Check all Return Error Codes
Boundary Conditions
Debugging Techniques
The IDE Debugger
Compiling for the IDE Debugger
Using the Integrated Debugger
Debugger Windows
The Watch Window
Changing the Value of Variables
Using Breakpoints
Other Debug/Breakpoints features
The Debugger Unit
Using Turbo Debugger
Compiling for Turbo Debugger Compatability
Starting Turbo Debugger
The Watch Wndow
Inspector Windows
Evaluate/Modify
Viewing All Variables
Controlling Program Execution
Breakpoints
Setting Breakpoint Options
Inserting Executable Expressions
Changed Memory Global..
Expression True Global...
Viewing Breakpoints
Turbo Debugger and Assembling Language Programs
Protected Mode Debugging on the 80286
Virtual Debugging on the 80386
Starting the Virtual Debugger
Debugging Turbo Vision Applications
Debugging Windows Applications



Chapter 8
Program Optimization and Turbo Profiler

Program Optimization
Using the Turbo Profiler
Compiling for Turbo Profiler Compatability
Selecting Program Areas to Profile
Obtaining Accurate Measurements
Improving the Program
Statistics Provided by Turbo Profiler
Turbo Profiler Output Options
Active versus Passive Profiling
Optimization Tricks
Clean Up of Loop Statements
Test for the Most Likely Outcomes First
Set Compiler Options For Most Efficient Execution
Replace Function Calls with Lookup Tables
Don't be Afraid of Goto!
Use Better Algorithms!
Use var Parameters Instead of Value Parameters
Consider Assembly Language
Use Fixed Point Longints in Place of Reals
Increase File I/O Buffers
Memory Reduction
Use Local and Dynamic Variables
Recycle Memory
Using Virtual Memory for Data



Chapter 9
Special Programming Techniques: 8087 Usage, Interrupts and TSRs

Using the 80x87 Math Coprocessor
Advantages and Disadvantages
Important Considerations when Using the Coprocessor
Transcendental Functions and the 80387
Other Data Types
Interrupt Handlers and TSRs
Compiling TSR Programs
Installing an Interrupt Handler
Writing the Interrupt Procedure
Use of the Procedure's Register Parameters
Writing Interrupt Procedures using the Assembler Directive
Writing TSRs
TSR Dangers
TSR Interrupt Trapping
TSR Construction
The Main Body of the Program
InstallTSR and the Message Passing Mechanism
Back to InstallTSR
The Keyboard Interrupt Handler
The INT $28 Interrupt Handler
RunPopUp
DoPopUpFunction
DoUnUnstall    
The Timer Interrupt
Debugging TSRs



Chapter 10
Turbo Pascal Standalone Programs

BINOBJ
GREP
MAKE
Example Use of MAKE
Explicit Rules
Command Lines
Implicit Rules
Conditional Directives
Using BUILTINS.MAK
Macros
MAKE Command Line Options     
THELP
TOUCH
TPC and BPC - Standalone Turbo Pascal compilers
TEMC The Turbo Editor Macro Compiler 
TDSTRIP
TDUMP



Chapter 11
Turbo Vision Tutorial 

What is Turbo Vision?
Learning Turbo Vision
About TVSHELL
A Simple Turbo Vision Application
How does it Run?
Creating the Menu Bar
NewMenu, NewSubMenu and NewItem
NewSubMenu
Hot keys
Command codes
Command Code values
Suggested Exercise
Using the NewLine function
Windows and Views
Turbo Vision Windows
Adding a simple window
TApplication.Init
Adding the Window
Introduction to Dialog Boxes and the HandleEvent Method
Modal versus Non-Modal Dialogs
Radiobuttons and Checkboxes
Tab Order
Introduction to Events and the HandleEvent method
How Events Work
When do you call an ancestor's HandleEvent method?
Keystrokes
Retrieving data from a dialog
Setting Default Values in Dialogs
Getting User Input
The Dialog Data Record
Putting Data into the Dialog
Getting Data
Storing Dialog Data



Chapter 12
Turbo Vision List Boxes

List Boxes and Collections
Sidebar:  Introduction to Collections
Creating a TCollection data object
Updating an entry in the collection
Deleting a collection entry
Advanced TCollection retrieval methods
Using Collections in TVSHELL6
Adding items to DirectoryCollection
The List Box Viewer
Creating a List box
Displaying List Box Text with GetText
Summary of TCollection and TListViewer
Finishing the TVSHELL Example Program
     Outline numbering and file selecting
     Scavenge hunts
     Selecting Files and evKeyDown Events
     Mouse Events
     DoSelectFile
     MoveCursor
     DoOpenClose
     Modifying GetText to display Outline numbering
     Finishing TVSHELL
     TShell.RenameDialog Implementation
     TShell.CopyDialog
     The Set Up Program Dialog
     The SetScreenMode Method
     Summary of SetScreenMode
     Disabling Menu Commands
Where to go next



Chapter 13
More Turbo Vision Features

Ownership versus Relationship
Z-Order
Views and Event Processing
Selected Views
Events and Event Processing Order
Positional Events
Broadcast Events
User Defined Events
Phased Events
TApplication.Idle:  Writing Background Tasks
Using Color Palettes
Application Color Palettes
The Default Color Palettes
Setting Color Palette Attribute Values
Changing the Default Colors
Common Problems with Color Mapping
Fixing an out of range color problem
Detecting Out of Memory Problems in Turbo Vision
LowMemory and ValidView
ValidView
Setting The Safety Pool Size
Cache Buffers
TView.Valid and TGroup.Valid
Adding On-line Help to Turbo Vision Programs
Step 1:  Writing the on-line help text
Step 2:  Using TVHC to Compile the Help Text
Step 3:  Adapting An Application for On-Line Help


Chapter 14
Collections

Creating a Collection
Adding records to a Collection
How many records are in the Collection?
Retrieving records from the Collection
Updating an entry in the collection
Deleting a collection entry
Disposing the Collection
Strings in TCollection Records
Iterators
ForEach
FirstThat and LastThat
Writing FindName as Method
Other Uses of FirstThat and LastThat
Collections and Memory usage
TSortedCollection
Sort into Descending Order
Using PStrings
Using TSortedCollection.Search
TStringCollection
Overriding Compare for TStringCollection
TStringCollection and Duplicate Entries
Using TStringCollection.Search
Polymorphic Collections



Chapter 15
Streams

Stream Types
Using a Stream
The TPersonInfo record for Stream I/O
The Registration Record
The ObjType Field
The VMTLink Field
Load and Store
The Store Method
Registering the stream
All Turbo Vision Objects are Streamable
Reading a Stream
     Defining the Load method and Registration record
The Get Method
Random Access Streams
GetPos, GetSize and Truncate
Streams in EMS Memory:  TEmsStream
Copying Entire Streams
Handling Stream Errors
Polymorphic Streams



Chapter 16
Resources

Creating a Database with Resources
Reading data from the Resource file
Storing Program Resources
Using Program Resources
Registering Turbo Vision Components using RegisterXXXX
Creating String Resources
Using String Resources
A String Resource Compiler Utility
Adding Resources to an .EXE File



Chapter 18
ObjectWindows Basics
Chapter written by Namir C. Shammas.

Windows Data Types
The ObjectWindows Hierarchy
TObject
TApplication
TWindowsObject
TDialog
TFileDialog
TInputDialog
TWindow
TControl
TScrollBar
TStatic
TEdit
TListBox
TComboBox
TGroupBox
TButton
TCheckBox
TRadioButton
TEditWindow
TFileWindow
Programming Note
TMDIWindow
TMDIClient
TScroller
The Windows API Functions
Invoking Windows API Functions
The Windows Messages
Responding to Messages
Sending Messages
User-defined Messages
Summary



Chapter 19
ObjectWindows Examples
Chapter written by Namir C. Shammas.

Resources
The Resource Workshop
Emulating DOS Screen in Windows
The Minimal Windows Application
Using Menus
User Input and Painting Windows
Command Buttons and Text Boxes
A Text File Editor
Summary

